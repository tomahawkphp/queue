#!/usr/bin/env php
<?php

use Tomahawk\Queue\Console\Application as ConsoleApplication;
use Tomahawk\Queue\Console\Command\ListCommand;
use Tomahawk\Queue\Console\Command\ListenCommand;
use Tomahawk\Queue\Console\Command\LoadCommand;
use Tomahawk\Queue\Console\Command\QueueCommand;
use Tomahawk\Queue\Console\Command\StopCommand;
use Tomahawk\Queue\Console\Command\WorkerCommand;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Output\ConsoleOutput;

$currentDirectory = getcwd();

$autoloadPaths = [
    __DIR__ . '/../../autoload.php',
    __DIR__ . '/../vendor/autoload.php',
    __DIR__ . '/vendor/autoload.php'
];

if ( ! ini_get('date.timezone')) {
    ini_set('date.timezone', 'UTC');
}

define('TOMAHAWK_QUEUE_BINARY', __FILE__);

foreach ($autoloadPaths as $file) {
    if (file_exists($file)) {
        define('TOMAHAWK_QUEUE_COMPOSER_INSTALL', $file);
        break;
    }
}

unset($file);

if ( ! defined('TOMAHAWK_QUEUE_COMPOSER_INSTALL')) {
    fwrite(STDERR,
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );

    die(1);
}

/** @var \Composer\Autoload\ClassLoader $loader */
$loader = require TOMAHAWK_QUEUE_COMPOSER_INSTALL;


$input = new ArgvInput();
$output = new ConsoleOutput();
$output->setDecorated(true);

$application = new ConsoleApplication($currentDirectory);
$application->add(new WorkerCommand());
$application->add(new QueueCommand());
$application->add(new ListCommand());
$application->add(new ListenCommand());
$application->add(new LoadCommand());
$application->add(new StopCommand());
$application->configure();
$application->run($input, $output);